const { Telegraf } = require('telegraf');
const { BOT_TOKEN } = require('./config');
const { loadData, saveData } = require('./utils/dataStore');

const bot = new Telegraf(BOT_TOKEN);
const data = loadData(); // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.start((ctx) => {
  const userId = ctx.from.id;
  if (!data[userId]) data[userId] = { channels: [] }; // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  ctx.reply(
    '–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É –≤–∞–º –ø–æ–ª—É—á–∞—Ç—å –ø–æ—Å—Ç—ã –∏–∑ Telegram-–∫–∞–Ω–∞–ª–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã:\n' +
      '/add_channel - –¥–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª\n' +
      '/get_posts - –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ—Å—Ç—ã –∏–∑ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤\n' +
      '/my_channels - —Å–ø–∏—Å–æ–∫ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤'
  );
  saveData(data); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
});

// –ö–æ–º–∞–Ω–¥–∞ /add_channel –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞
bot.command('add_channel', async (ctx) => {
  const userId = ctx.from.id;
  ctx.reply('–í–≤–µ–¥–∏—Ç–µ @username –∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª:');

  bot.on('text', async (msgCtx) => {
    const channel = msgCtx.message.text; // –ò–º—è –∏–ª–∏ —Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª
    if (!data[userId]) data[userId] = { channels: [] };

    try {
      const chat = await bot.telegram.getChat(channel); // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∫–∞–Ω–∞–ª
      if (!data[userId].channels.some((ch) => ch.id === chat.id)) {
        data[userId].channels.push({
          id: chat.id,
          username: chat.username || null,
        });
        saveData(data); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
        msgCtx.reply(`–ö–∞–Ω–∞–ª "${chat.title}" –¥–æ–±–∞–≤–ª–µ–Ω!`);
      } else {
        msgCtx.reply('–≠—Ç–æ—Ç –∫–∞–Ω–∞–ª —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω.');
      }
    } catch (error) {
      console.error(error);
      msgCtx.reply('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–∞–Ω–∞–ª. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Å—Å—ã–ª–∫–∏ –∏–ª–∏ username.');
    }
  });
});

// –ö–æ–º–∞–Ω–¥–∞ /my_channels –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤
bot.command('my_channels', (ctx) => {
  const userId = ctx.from.id;
  const userChannels = data[userId]?.channels || [];

  if (userChannels.length === 0) {
    ctx.reply('–í—ã –µ—â—ë –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞.');
  } else {
    const channelList = userChannels
      .map((channel) => `- ${channel.username || `ID: ${channel.id}`}`)
      .join('\n');
    ctx.reply(`–í–∞—à–∏ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª—ã:\n${channelList}`);
  }
});

// –ö–æ–º–∞–Ω–¥–∞ /get_posts –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.command('get_posts', async (ctx) => {
  const userId = ctx.from.id;
  const userChannels = data[userId]?.channels || [];

  if (!userChannels.length) {
    return ctx.reply('–í—ã –µ—â—ë –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞.');
  }

  for (const channel of userChannels) {
    try {
      const chat = await bot.telegram.getChat(channel.id);
      const history = await bot.telegram.getChatHistory(chat.id, { limit: 5 }); // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å–æ–æ–±—â–µ–Ω–∏–π

      ctx.reply(`üì¢ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ—Å—Ç—ã –∏–∑ –∫–∞–Ω–∞–ª–∞ "${chat.title}":`);
      for (const message of history) {
        const content = message.text || '–ú–µ–¥–∏–∞ –∏–ª–∏ –¥—Ä—É–≥–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç';
        ctx.reply(content);
      }
    } catch (error) {
      console.error(error);
      ctx.reply(`–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å—Ç—ã –∏–∑ –∫–∞–Ω–∞–ª–∞ ${channel.username || channel.id}`);
    }
  }
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.launch().then(() => console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!'));
